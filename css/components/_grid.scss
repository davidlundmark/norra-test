@mixin generateGrid($index: 12, $prefix: '', $gap-grid: $grid-gap) {
    &.col-#{$prefix} {
        &hide {
            display: none;
        }
    }
    @while $index > 0 {
        &.col-#{$prefix}#{$index} {
            @include setColumnWidth(12/$index, $gap-grid)
        }
        $index: $index - 1;
    }
}

@mixin setColumnWidth($count, $gap-grid) {
    html:not(.ie) & {
        @if $gap !=0 {
            width: calc((100% / #{$count}) - #{$gap-grid});
        }
        @else {
            width: calc(100% / #{$count});
        }
    }
    html.ie & {
        $iefix: 1px; //-1px = IE subpixel rounding fix
        @if $gap !=0 {
            width: calc((100% / #{$count}) - #{$gap-grid} - #{$iefix});
        }
        @else {
            width: calc((100% / #{$count}) - #{$iefix});
        }
    }
}

.row {
    margin-top: -$grid-gap;
    margin-left: -$grid-gap;
    width: calc(100% + #{$grid-gap});
    @include clearfix();
    > .column {
        @include clearfix();
        position: relative;
        overflow: hidden;
        display: block;
        float: left;
        margin-top: $grid-gap;
        margin-left: $grid-gap - 0.01px;
        width: calc(100% - #{$grid-gap});
        @include generateGrid();
        @include breakpoint($breakpoint-lg) {
            @include generateGrid($prefix: 'lg-');
        }
        @include breakpoint($breakpoint-md) {
            @include generateGrid($prefix: 'md-');
        }
        @include breakpoint($breakpoint-sm) {
            @include generateGrid($prefix: 'sm-');
        }
    }
}
